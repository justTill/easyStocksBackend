name: Test_And_Deploy
on:
  push:
env:
  POSTGRES_HOST: localhost
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PW: ${{ secrets.POSTGRES_PW }}
  POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  BACKEND_PORT: ${{ secrets.BACKEND_PORT }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
  MARKETSTACK_APIKEY: ${{ secrets.MARKETSTACK_APIKEY }}

jobs:
  healthcheck:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PW }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Build with gradle
        run: gradle wrapper && ./gradlew build
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: easy-stocks
          path: ./build/libs/easy-stocks-0.0.1.jar
        if: github.ref == 'refs/heads/master'

  buildAndPush:
    needs: healthcheck
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          name: easy-stocks
          path: ./build/libs/easy-stocks-0.0.1.jar
      - name: Build Image
        run: docker build --build-arg JAR_FILE=build/libs/\*jar -t ${{ secrets.DOCKER_REPOSITORY }} .
      - name: Log into registry
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Image
        run: docker push ${{ secrets.DOCKER_REPOSITORY }}:latest .

  deploy:
    needs: buildAndPush
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Run Ansible Playbook
        run: ansible-playbook deploy_playbook.yaml
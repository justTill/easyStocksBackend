---
- name: Update Easy Stocks Application
  hosts: webservers

  vars:
    ANSIBLE_PYTHON_INTERPRETER: /usr/bin/python3.8
    POSTGRES_HOST: "{{ lookup('env', 'ANS_POSTGRES_HOST') }}"
    POSTGRES_DATABASE: "{{ lookup('env', 'ANS_POSTGRES_DATABASE') }}"
    POSTGRES_USER: "{{ lookup('env', 'ANS_POSTGRES_USER') }}"
    POSTGRES_PW: "{{ lookup('env', 'ANS_POSTGRES_PW') }}"
    POSTGRES_PORT: "{{ lookup('env', 'ANS_POSTGRES_PORT') }}"
    BACKEND_PORT: "{{ lookup('env', 'ANS_BACKEND_PORT') }}"
    INIT_HISTORY: "{{ lookup('env', 'ANS_INIT_HISTORY') }}"
    STOCK_APIKEY: "{{ lookup('env', 'STOCK_APIKEY') }}"
    DOCKER_PASSWORD: "{{ lookup('env', 'DOCKER_PASSWORD') }}"
    DOCKER_USERNAME: "{{ lookup('env', 'DOCKER_USERNAME') }}"
    DOCKER_REPOSITORY: "{{ lookup('env', 'DOCKER_REPOSITORY') }}"

  tasks:
    - name: Login In Docker Registry
      community.docker.docker_login:
        username: '{{ DOCKER_USERNAME }}'
        password: '{{ DOCKER_PASSWORD }}'

    - name: Tear down existing Container and Images
      community.docker.docker_compose:
        project_name: easystocks
        project_src: ./
        state: absent
        remove_images: all

    - name: Start Containers (docker-compose-up)
      community.docker.docker_compose:
        project_name: easystocks
        definition:
          version: '3'
          services:
            backend:
              restart: always
              image: justtill/easy-stocks:latest
              ports:
                - "8080:8080"
              container_name: easystocksbackend
              environment:
                - POSTGRES_PW={{ POSTGRES_PW }}
                - POSTGRES_USER={{ POSTGRES_USER }}
                - POSTGRES_HOST=db
                - POSTGRES_PORT={{ POSTGRES_PORT }}
                - POSTGRES_DATABASE={{ POSTGRES_DATABASE }}
                - STOCK_APIKEY={{ STOCK_APIKEY }}
                - INIT_HISTORY={{ INIT_HISTORY }}
              depends_on:
                - db
            db:
              restart: always
              image: postgres:14.0-alpine
              container_name: easystocksdb
              volumes:
                - postgres_data:/var/lib/postgresql/data/
              environment:
                - POSTGRES_PASSWORD={{ POSTGRES_PW }}
                - POSTGRES_USER={{ POSTGRES_USER }}
                - POSTGRES_DB={{ POSTGRES_DATABASE }}
              ports:
                - "5431:5431"
          volumes:
            postgres_data:

        #- name: Start Containers (docker-compose-up)
        # community.docker.docker_compose:
        #  project_src: ./
        # build: no
        #pull: yes
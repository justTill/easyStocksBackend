name: Test_And_Deploy
on:
  push:
env:
  POSTGRES_HOST: localhost
  POSTGRES_DATABASE: easystocks
  POSTGRES_USER: postgres
  POSTGRES_PW: postgres
  POSTGRES_PORT: 5432
  ANS_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
  ANS_POSTGRES_DATABASE: ${{ secrets.POSTGRES_DB }}
  ANS_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  ANS_POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  ANS_POSTGRES_PW: ${{ secrets.POSTGRES_PW }}
  BACKEND_PORT: ${{ secrets.BACKEND_PORT }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
  STOCK_APIKEY: ${{ secrets.STOCK_APIKEY }}
  INIT_HISTORY: ${{ secrets.INIT_HISTORY }}
  ANS_INIT_HISTORY: ${{ secrets.ANS_INIT_HISTORY }}

jobs:
  depltestoy:
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Adding Known Hosts
        run: ssh-keyscan -p 2220 -H h2899527.stratoserver.net >> ~/.ssh/known_hosts
      - name: Run Ansible Playbook
        run: ls -l -a /home/runner/.ssh
      - name: Run Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v2.5.0
        with:
          playbook: deploy_playbook.yml
          directory: ./
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          inventory: |
            [webservers]
            h2899527.stratoserver.net ansible_port=2220 ansible_user=msbackend
  healthcheck:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: easystocks
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - name: Build with gradle
        run: gradle wrapper && ./gradlew build
      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: easy-stocks
          path: ./build/libs/easy-stocks-0.0.1.jar
        #if: github.ref == 'refs/heads/master'

  buildAndPush:
    needs: healthcheck
    runs-on: ubuntu-latest
    #if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@master
        with:
          name: easy-stocks
          path: ./build/libs/easy-stocks-0.0.1.jar
      - name: Build Image
        run: docker build --build-arg JAR_FILE=build/libs/\*jar -t ${{ secrets.DOCKER_REPOSITORY }} .
      - name: Log into registry
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Image
        run: docker push ${{ secrets.DOCKER_REPOSITORY }}:latest

  deploy:
    needs: buildAndPush
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master'
    steps:
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: 'just-a-placeholder-so-we-dont-get-errors'
      - name: Adding Known Hosts
        run: ssh-keyscan -p 2220 -H h2899527.stratoserver.net >> ~/.ssh/known_hosts
      - uses: actions/checkout@v2